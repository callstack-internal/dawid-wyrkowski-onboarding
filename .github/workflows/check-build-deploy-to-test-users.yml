#name: Check, build, deploy test versions
#
#on:
#  pull_request:
#    types:
#      - closed
#
#jobs:
#  tsc:
#    if: github.event.pull_request.merged == true
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '22'
#
#      - name: Cache Node.js modules
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.yarn
#            ~/.cache
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-
#
#      - name: Install dependencies
#        run: yarn install --frozen-lockfile
#
#      - name: Run TypeScript compiler
#        run: yarn run tsc
#  lint:
#    runs-on: ubuntu-latest
#    needs: tsc
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Cache Node.js modules
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/.yarn
#            ~/.cache
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-
#
#      - name: Install dependencies
#        run: yarn install --frozen-lockfile
#
#      - name: Run Linting
#        run: yarn run lint
#
#  build-ios:
#    runs-on: macos-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up Ruby
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: '3.3.0'
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '22'
#
#      - name: Cache Node.js modules
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/.yarn
#            ~/.cache
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-
#
#      - name: Install dependencies
#        run: yarn install --frozen-lockfile
#
#      - name: Install Fastlane
#        run: |
#          cd ios
#          rm -rf Gemfile.lock
#          gem install bundler -v 2.4.22
#          bundle install
#
#      - name: Set up Fastlane API Key
#        run: |
#          echo "${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}" > ios/fastlane/AuthKey.p8
#        env:
#          APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
#
#      - name: Run Fastlane Lane
#        run: |
#          cd ios
#          bundle exec fastlane beta
#        env:
#
